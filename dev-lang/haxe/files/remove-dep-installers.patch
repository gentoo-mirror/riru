diff --git a/tests/RunCi.hx b/tests/RunCi.hx
index e88c544e0..9c9cb581c 100644
--- a/tests/RunCi.hx
+++ b/tests/RunCi.hx
@@ -105,16 +105,6 @@ class RunCi {
 			fail();
 	}
 
-	static function isAptPackageInstalled(aptPackage:String):Bool {
-		return commandSucceed("dpkg-query", ["-W", "-f='${Status}'", aptPackage]);
-	}
-
-	static function requireAptPackages(packages:Array<String>):Void {
-		var notYetInstalled = [for (p in packages) if (!isAptPackageInstalled(p)) p];
-		if (notYetInstalled.length > 0)
-			runCommand("sudo", ["apt-get", "install", "-y"].concat(notYetInstalled), true);
-	}
-
 	static function haxelibInstallGit(account:String, repository:String, ?branch:String, ?srcPath:String, useRetry:Bool = false, ?altName:String):Void {
 		var name:String = (altName == null) ? repository : altName;
 		try {
@@ -180,10 +170,6 @@ class RunCi {
 
 		switch (systemName) {
 			case "Linux":
-				requireAptPackages([
-					"libcurl3:i386", "libglib2.0-0:i386", "libx11-6:i386", "libxext6:i386",
-					"libxt6:i386", "libxcursor1:i386", "libnss3:i386", "libgtk2.0-0:i386"
-				]);
 				runCommand("wget", ["-nv", "http://fpdownload.macromedia.com/pub/flashplayer/updaters/25/flash_player_sa_linux_debug.x86_64.tar.gz"], true);
 				runCommand("tar", ["-xf", "flash_player_sa_linux_debug.x86_64.tar.gz", "-C", Sys.getEnv("HOME")]);
 				File.saveContent(mmcfgPath, "ErrorReportingEnable=1\nTraceOutputFileEnable=1");
@@ -381,8 +367,6 @@ class RunCi {
 					null;
 				if (phpCmd.exitCode == 0 && phpVer != null && phpVer >= 5.5) {
 					infoMsg('php has already been installed.');
-				} else {
-					requireAptPackages(["php5-cli", "php5-mysql", "php5-sqlite"]);
 				}
 			case "Mac":
 				//pass
@@ -401,14 +385,6 @@ class RunCi {
 	static function getCppDependencies() {
 		if (gotCppDependencies) return;
 
-		//hxcpp dependencies
-		switch (systemName) {
-			case "Linux":
-				requireAptPackages(["gcc-multilib", "g++-multilib"]);
-			case "Mac":
-				//pass
-		}
-
 
 		//install and build hxcpp
 		try {
@@ -447,35 +423,10 @@ class RunCi {
 	}
 
 	static function getJSDependencies() {
-		switch (systemName) {
-			case "Linux":
-				if (commandSucceed("node", ["-v"])) {
-					infoMsg('node has already been installed.');
-				} else {
-					requireAptPackages(["nodejs"]);
-				}
-			case "Mac":
-				//pass
-		}
-
 		runCommand("node", ["-v"]);
 	}
 
 	static function getLuaDependencies(){
-		switch (systemName){
-			case "Linux":
-				requireAptPackages(["libpcre3-dev"]);
-				runCommand("pip", ["install", "--user", "hererocks"]);
-			case "Mac": {
-				if (commandSucceed("python3", ["-V"]))
-					infoMsg('python3 has already been installed.');
-				else
-					runCommand("brew", ["install", "python3"], true);
-
-			  runCommand("brew", ["install", "pcre"], false, true);
-				runCommand("pip3", ["install", "hererocks"]);
-			}
-		}
 	}
 
 	static function installLuaVersionDependencies(lv:String){
@@ -503,8 +454,6 @@ class RunCi {
 			case "Linux":
 				if (commandSucceed("mono", ["--version"]))
 					infoMsg('mono has already been installed.');
-				else
-					requireAptPackages(["mono-devel", "mono-mcs"]);
 				runCommand("mono", ["--version"]);
 			case "Mac":
 				if (commandSucceed("mono", ["--version"]))
@@ -558,24 +507,7 @@ class RunCi {
 	static function getPythonDependencies():Array<String> {
 		switch (systemName) {
 			case "Linux":
-				if (commandSucceed("python3", ["-V"]))
-					infoMsg('python3 has already been installed.');
-				else
-					requireAptPackages(["python3"]);
-				runCommand("python3", ["-V"]);
-
-				var pypy = "pypy3";
-				if (commandSucceed(pypy, ["-V"])) {
-					infoMsg('pypy3 has already been installed.');
-				} else {
-					var pypyVersion = "pypy3-2.4.0-linux64";
-					runCommand("wget", ['https://bitbucket.org/pypy/pypy/downloads/${pypyVersion}.tar.bz2'], true);
-					runCommand("tar", ["-xf", '${pypyVersion}.tar.bz2']);
-					pypy = FileSystem.fullPath('${pypyVersion}/bin/pypy3');
-				}
-				runCommand(pypy, ["-V"]);
-
-				return ["python3", pypy];
+				return [Sys.getEnv("PYTHON")];
 			case "Mac":
 				if (commandSucceed("python3", ["-V"]))
 					infoMsg('python3 has already been installed.');
